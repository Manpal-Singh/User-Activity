{"ast":null,"code":"var _jsxFileName = \"/home/mannu/fullthrottle/src/App.js\";\nimport React, { Component } from 'react'; //var ReactDOM = require('react-dom');\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props); // set initial state\n\n    this.handleChange = date => {\n      this.setState({\n        startDate: date\n      });\n    };\n\n    this.state = {\n      isModalOpen: false,\n      isInnerModalOpen: false,\n      response: [],\n      users: [],\n      user: [],\n      startDate: new Date(),\n      activity_periods: [],\n      userId: \"\",\n      monthNames: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n    }; // bind functions\n\n    this.closeModal = this.closeModal.bind(this);\n    this.openModal = this.openModal.bind(this);\n  }\n\n  // close modal (set isModalOpen, true)\n  closeModal() {\n    this.setState({\n      isModalOpen: false\n    });\n  } // open modal (set isModalOpen, false)\n\n\n  openModal(userData) {\n    //alert(userData.activity_periods[0].start_time)\n    this.setState({\n      isModalOpen: true,\n      user: userData,\n      activity_periods: userData.activity_periods,\n      userId: userData.id\n    });\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:9000/api/users/').then(res => res.json()).then(data => {\n      this.setState({\n        response: data\n      });\n      this.setState({\n        users: data.members\n      });\n      console.log('full response===>');\n      console.log(this.state.response);\n      console.log('abstract users data only===>');\n      console.log(this.state.users);\n    }).catch(console.log);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        textAlign: \"center\",\n        color: \"green\",\n        marginTop: 40\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, \"All Users\"), this.state.users.map(user => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      key: user.id,\n      onClick: () => this.openModal(user),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, \"Name: \", user.real_name), /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"card-subtitle mb-2 text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, \"Id: \", user.id)))), /*#__PURE__*/React.createElement(Modal, {\n      isModalOpen: this.state.isModalOpen,\n      closeModal: this.closeModal,\n      style: modalStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      style: { ...mainStyle.button,\n        margin: 0,\n        width: \"auto\",\n        marginTop: 10,\n        float: \"right\"\n      },\n      onClick: this.closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, \"Close\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, \"Select Date \", \" \"), /*#__PURE__*/React.createElement(DatePicker, {\n      selected: this.state.startDate,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }, \"Day:\", this.state.monthNames[this.state.startDate.getDay()], \" \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, \"Date:\", this.state.startDate.getDate(), \" \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }, \"Year:\", this.state.startDate.getFullYear(), \" \"), this.state.activity_periods.map(activity => /*#__PURE__*/React.createElement(Activity, {\n      calData: this.state.startDate,\n      activityData: activity,\n      userId: this.state.userId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    }) // <div className=\"card\" key={activity.id}>\n    //   <div className=\"card-body\">\n    //     <h5 className=\"card-title\">Start Time: {activity.start_time.split(\" \")[1]}</h5>\n    //     <h5 className=\"card-title\">End Time: {activity.end_time}</h5>\n    //   </div>\n    // </div>\n    ))));\n  }\n\n}\n\nclass Activity extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      month: \"\",\n      date: \"\",\n      year: '',\n      monthNames: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n    };\n  }\n\n  render() {\n    this.month = this.props.activityData.start_time.split(\" \")[0];\n    this.date = this.props.activityData.start_time.split(\" \")[1];\n    this.year = this.props.activityData.start_time.split(\" \")[2]; //alert(this.props.calData.getDay())\n    //  alert(this.year)\n\n    if (this.state.monthNames[this.props.calData.getDay()] === this.month) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        key: this.props.activityData.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }\n      }, \"Id: \", this.props.userId), /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }\n      }, \"Start Time: \", this.props.activityData.start_time), /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }\n      }, \"End Time: \", this.props.activityData.end_time)));\n    } else {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 9\n        }\n      }, \"not active\");\n    }\n  }\n\n}\n\nclass Modal extends React.Component {\n  // static propTypes = {\n  // \tisModalOpen: React.PropTypes.bool.isRequired,\n  // \tcloseModal: React.PropTypes.func.isRequired,\n  // \tstyle: React.PropTypes.shape({\n  // \t\tmodal: React.PropTypes.object,\n  // \t\toverlay: React.PropTypes.object\n  // \t})\n  // };\n  constructor(props) {\n    super(props);\n    this.outerStyle = {\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      overflow: \"auto\",\n      zIndex: 1\n    }; // default style\n\n    this.style = {\n      modal: {\n        position: \"relative\",\n        width: 500,\n        padding: 20,\n        boxSizing: \"border-box\",\n        backgroundColor: \"#fff\",\n        margin: \"40px auto\",\n        borderRadius: 3,\n        zIndex: 2,\n        textAlign: \"left\",\n        boxShadow: \"0 20px 30px rgba(0, 0, 0, 0.2)\",\n        ...this.props.style.modal\n      },\n      overlay: {\n        position: \"fixed\",\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        width: \"100%\",\n        height: \"100%\",\n        backgroundColor: \"rgba(0,0,0,0.5)\",\n        ...this.props.style.overlay\n      }\n    };\n  } // render modal\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: { ...this.outerStyle,\n        display: this.props.isModalOpen ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: this.style.overlay,\n      onClick: this.props.closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: this.props.closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: this.style.modal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 5\n      }\n    }, this.props.children));\n  }\n\n} // overwrite style\n\n\nconst modalStyle = {\n  overlay: {\n    backgroundColor: \"rgba(0, 0, 0,0.5)\"\n  }\n};\nconst mainStyle = {\n  app: {\n    margin: \"120px 0\"\n  },\n  button: {\n    backgroundColor: \"#408cec\",\n    border: 0,\n    padding: \"12px 20px\",\n    color: \"#fff\",\n    margin: \"0 auto\",\n    width: 150,\n    display: \"block\",\n    borderRadius: 3\n  }\n}; //ReactDOM.render(<App />, document.getElementById(\"app\"));\n\nexport default App;","map":{"version":3,"sources":["/home/mannu/fullthrottle/src/App.js"],"names":["React","Component","DatePicker","App","constructor","props","handleChange","date","setState","startDate","state","isModalOpen","isInnerModalOpen","response","users","user","Date","activity_periods","userId","monthNames","closeModal","bind","openModal","userData","id","componentDidMount","fetch","then","res","json","data","members","console","log","catch","render","textAlign","color","marginTop","map","real_name","modalStyle","mainStyle","button","margin","width","float","getDay","getDate","getFullYear","activity","Activity","month","year","activityData","start_time","split","calData","end_time","Modal","outerStyle","position","top","left","height","overflow","zIndex","style","modal","padding","boxSizing","backgroundColor","borderRadius","boxShadow","overlay","bottom","right","display","children","app","border"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//var ReactDOM = require('react-dom');\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n\t\t// set initial state\n\t\tthis.state = {\n\t\t\tisModalOpen: false,\n      isInnerModalOpen: false,\n      response: [],\n      users: [],\n      user: [],\n      startDate: new Date(),\n      activity_periods: [],\n      userId: \"\",\n      monthNames:[\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n      \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n\t\t};\n\t\t// bind functions\n\t\tthis.closeModal = this.closeModal.bind(this);\n\t\tthis.openModal = this.openModal.bind(this);\n  }\n\n   handleChange = date => {\n    this.setState({\n      startDate: date\n    });\n  };\n\n\n\t// close modal (set isModalOpen, true)\n\tcloseModal() {\n\t\tthis.setState({\n\t\t\tisModalOpen: false\n\t\t});\n\t}\n\n\t// open modal (set isModalOpen, false)\n\topenModal(userData) {\n   //alert(userData.activity_periods[0].start_time)\n\t\tthis.setState({\n      isModalOpen: true,\n      user:userData,\n      activity_periods: userData.activity_periods,\n      userId: userData.id\n    });\n  }\n  \n  componentDidMount() {\n    fetch('http://localhost:9000/api/users/')\n    .then(res => res.json())\n    .then((data) => {\n      this.setState({ response: data })\n      this.setState({ users: data.members })\n      console.log('full response===>')\n      console.log(this.state.response)\n      console.log('abstract users data only===>')\n      console.log(this.state.users)\n    })\n    .catch(console.log)\n  }\n  render() {\n    return (\n      <div className=\"container\">\n      <div className=\"col-xs-12\">\n      <h1 style={{textAlign: \"center\", color: \"green\", marginTop: 40}}>All Users</h1>\n      {this.state.users.map((user) => (\n        <div className=\"card\" key={user.id} onClick={() => this.openModal(user)}>\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">Name: {user.real_name}</h5>\n            <h6 className=\"card-subtitle mb-2 text-muted\">Id: {user.id}</h6>\n          </div>\n        </div>\n      ))}\n\n      <Modal\n        isModalOpen={this.state.isModalOpen}\n        closeModal={this.closeModal}\n        style={modalStyle}\n      >\n\n        {/* <button\n          style={{\n            ...mainStyle.button,\n            margin: 0,\n            width: \"auto\",\n            marginTop: 10,\n            float: \"left\"\n          }}\n          onClick={this.closeModal}\n        >\n          View Activity\n        </button> */}\n\n        <button\n          style={{\n            ...mainStyle.button,\n            margin: 0,\n            width: \"auto\",\n            marginTop: 10,\n            float: \"right\"\n          }}\n          onClick={this.closeModal}\n        >\n          Close \n        </button>\n\n        <p>Select Date {} </p>\n        <DatePicker\n        selected={this.state.startDate}\n        onChange={this.handleChange}\n      />\n      \n        {/* <p>selected Date: </p>{this.state.startDate.toLocaleDateString('en-US', \n        {year: 'numeric', month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'})} */}\n        \n        <p>Day:{this.state.monthNames[this.state.startDate.getDay()]} </p>\n        <p>Date:{this.state.startDate.getDate()} </p>\n        <p>Year:{this.state.startDate.getFullYear()} </p>\n\n        {/* {this.state.activity_periods.map((activity) => (\n        <div className=\"card\" key={activity.id}>\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">Start Time: {activity.start_time}</h5>\n            <h5 className=\"card-title\">End Time: {activity.end_time}</h5>\n          </div>\n        </div>\n      ))} */}\n      \n\n      {this.state.activity_periods.map((activity) => (\n        <Activity calData={this.state.startDate} activityData={activity} userId={this.state.userId}/>\n        // <div className=\"card\" key={activity.id}>\n        //   <div className=\"card-body\">\n        //     <h5 className=\"card-title\">Start Time: {activity.start_time.split(\" \")[1]}</h5>\n        //     <h5 className=\"card-title\">End Time: {activity.end_time}</h5>\n        //   </div>\n        // </div>\n      ))}\n        \n      </Modal>\n\n      </div>\n     </div>\n    );\n  }\n}\n\n\nclass Activity extends React.Component {\n  constructor(props) {\n\t\tsuper(props);\n      this.state = {\n        month: \"\",\n        date: \"\",\n        year: '',\n        monthNames:[\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n        \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n      }\n    }\n  \n\trender() {\n    this.month=this.props.activityData.start_time.split(\" \")[0]\n    this.date=this.props.activityData.start_time.split(\" \")[1]\n    this.year=this.props.activityData.start_time.split(\" \")[2]\n    //alert(this.props.calData.getDay())\n  //  alert(this.year)\n  \n    if((this.state.monthNames[this.props.calData.getDay()]===this.month) \n      ){\n      return (\n        <div className=\"card\" key={this.props.activityData.id}>\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">Id: {this.props.userId}</h5>\n            <h5 className=\"card-title\">Start Time: {this.props.activityData.start_time}</h5>\n            <h5 className=\"card-title\">End Time: {this.props.activityData.end_time}</h5>\n          </div>\n        </div>\n      );\n    } else{\n      return (\n        <p>not active</p>\n      );\n    }\n\t}\n}\n\n\n\nclass Modal extends React.Component {\n\t// static propTypes = {\n\t// \tisModalOpen: React.PropTypes.bool.isRequired,\n\t// \tcloseModal: React.PropTypes.func.isRequired,\n\t// \tstyle: React.PropTypes.shape({\n\t// \t\tmodal: React.PropTypes.object,\n\t// \t\toverlay: React.PropTypes.object\n\t// \t})\n\t// };\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.outerStyle = {\n\t\t\tposition: \"fixed\",\n\t\t\ttop: 0,\n\t\t\tleft: 0,\n\t\t\twidth: \"100%\",\n\t\t\theight: \"100%\",\n\t\t\toverflow: \"auto\",\n\t\t\tzIndex: 1\n\t\t};\n\n\t\t// default style\n\t\tthis.style = {\n\t\t\tmodal: {\n\t\t\t\tposition: \"relative\",\n\t\t\t\twidth: 500,\n\t\t\t\tpadding: 20,\n\t\t\t\tboxSizing: \"border-box\",\n\t\t\t\tbackgroundColor: \"#fff\",\n\t\t\t\tmargin: \"40px auto\",\n\t\t\t\tborderRadius: 3,\n\t\t\t\tzIndex: 2,\n\t\t\t\ttextAlign: \"left\",\n\t\t\t\tboxShadow: \"0 20px 30px rgba(0, 0, 0, 0.2)\",\n\t\t\t\t...this.props.style.modal\n\t\t\t},\n\t\t\toverlay: {\n\t\t\t\tposition: \"fixed\",\n\t\t\t\ttop: 0,\n\t\t\t\tbottom: 0,\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\twidth: \"100%\",\n\t\t\t\theight: \"100%\",\n\t\t\t\tbackgroundColor: \"rgba(0,0,0,0.5)\",\n\t\t\t\t...this.props.style.overlay\n\t\t\t}\n\t\t};\n\t}\n\n\t// render modal\n\trender() {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\t...this.outerStyle,\n\t\t\t\t\tdisplay: this.props.isModalOpen ? \"block\" : \"none\"\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<div style={this.style.overlay} onClick={this.props.closeModal} />\n\t\t\t\t<div onClick={this.props.closeModal} />\n\t\t\t\t<div style={this.style.modal}>{this.props.children}</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// overwrite style\nconst modalStyle = {\n\toverlay: {\n\t\tbackgroundColor: \"rgba(0, 0, 0,0.5)\"\n\t}\n};\n\nconst mainStyle = {\n\tapp: {\n\t\tmargin: \"120px 0\"\n\t},\n\tbutton: {\n\t\tbackgroundColor: \"#408cec\",\n\t\tborder: 0,\n\t\tpadding: \"12px 20px\",\n\t\tcolor: \"#fff\",\n\t\tmargin: \"0 auto\",\n\t\twidth: 150,\n\t\tdisplay: \"block\",\n\t\tborderRadius: 3\n\t}\n};\n\n//ReactDOM.render(<App />, document.getElementById(\"app\"));\nexport default App;"]},"metadata":{},"sourceType":"module"}