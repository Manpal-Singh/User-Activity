{"ast":null,"code":"var _jsxFileName = \"/home/mannu/Desktop/Project/Reactjs Project/fullthrottle/src/App.js\";\nimport React, { Component } from 'react'; //var ReactDOM = require('react-dom');\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props); // set initial state\n\n    this.handleChange = date => {\n      this.setState({\n        startDate: date\n      });\n    };\n\n    this.state = {\n      isModalOpen: false,\n      isInnerModalOpen: false,\n      response: [],\n      users: [],\n      user: [],\n      startDate: new Date(),\n      activity_periods: [],\n      userId: \"\",\n      userName: \"\",\n      isCalenderOpen: false\n    }; // bind functions\n\n    this.closeModal = this.closeModal.bind(this);\n    this.openModal = this.openModal.bind(this);\n  }\n\n  // close modal (set isModalOpen, true)\n  closeModal() {\n    this.setState({\n      isModalOpen: false\n    });\n  } // open modal (set isModalOpen, false)\n\n\n  openModal(userData) {\n    //alert(userData.activity_periods[0].start_time)\n    this.setState({\n      isModalOpen: true,\n      user: userData,\n      activity_periods: userData.activity_periods,\n      userId: userData.id,\n      userName: userData.real_name\n    });\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:9000/api').then(res => res.json()).then(data => {\n      console.log(data); // this.setState({ response: data })\n      // this.setState({ users: data.members })\n      // console.log('full response===>')\n      // console.log(this.state.response)\n      // console.log('abstract users data only===>')\n      // console.log(this.state.users)\n    }).catch(console.log);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, \"hello\");\n  }\n\n}\n\nclass Activity extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      month: \"\",\n      date: \"\",\n      year: '',\n      monthNames: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n    };\n  }\n\n  render() {\n    this.month = this.props.activityData.start_time.split(\" \")[0];\n    this.date = this.props.activityData.start_time.split(\" \")[1];\n    this.year = this.props.activityData.start_time.split(\" \")[2];\n\n    if (this.state.monthNames[this.props.calData.getMonth()] === this.month && this.props.calData.getFullYear() === this.year && this.props.calData.getDate() === this.date) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }\n      }, this.props.userName, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"green\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }\n      }, \" Online On \"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 15\n        }\n      }, this.props.calData.getDate(), \" \", this.state.monthNames[this.props.calData.getMonth()], \" \", this.props.calData.getFullYear())), /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }\n      }, \"From: \", this.props.activityData.start_time.split(\" \")[4]), /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }\n      }, \"To: \", this.props.activityData.end_time.split(\" \")[3])));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        style: {\n          display: \"none\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }\n      }, this.props.userName, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"Red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }\n      }, \" Offline \"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }\n      }, this.props.calData.getDate(), \" \", this.state.monthNames[this.props.calData.getMonth()], \" \", this.props.calData.getFullYear()))));\n    }\n  }\n\n}\n\nclass Modal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.outerStyle = {\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      overflow: \"auto\",\n      zIndex: 1\n    }; // default style\n\n    this.style = {\n      modal: {\n        position: \"relative\",\n        width: 500,\n        padding: 20,\n        boxSizing: \"border-box\",\n        backgroundColor: \"#fff\",\n        margin: \"40px auto\",\n        borderRadius: 3,\n        zIndex: 2,\n        textAlign: \"left\",\n        boxShadow: \"0 20px 30px rgba(0, 0, 0, 0.2)\",\n        ...this.props.style.modal\n      },\n      overlay: {\n        position: \"fixed\",\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        width: \"100%\",\n        height: \"100%\",\n        backgroundColor: \"rgba(0,0,0,0.5)\",\n        ...this.props.style.overlay\n      }\n    };\n  } // render modal\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: { ...this.outerStyle,\n        display: this.props.isModalOpen ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: this.style.overlay,\n      onClick: this.props.closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: this.props.closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: this.style.modal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 5\n      }\n    }, this.props.children));\n  }\n\n} // overwrite style\n\n\nconst modalStyle = {\n  overlay: {\n    backgroundColor: \"rgba(0, 0, 0,0.5)\"\n  }\n};\nconst mainStyle = {\n  app: {\n    margin: \"120px 0\"\n  },\n  button: {\n    backgroundColor: \"#408cec\",\n    border: 0,\n    padding: \"12px 20px\",\n    color: \"#fff\",\n    margin: \"0 auto\",\n    width: 150,\n    display: \"block\",\n    borderRadius: 3\n  }\n};\nexport default App;","map":{"version":3,"sources":["/home/mannu/Desktop/Project/Reactjs Project/fullthrottle/src/App.js"],"names":["React","Component","DatePicker","App","constructor","props","handleChange","date","setState","startDate","state","isModalOpen","isInnerModalOpen","response","users","user","Date","activity_periods","userId","userName","isCalenderOpen","closeModal","bind","openModal","userData","id","real_name","componentDidMount","fetch","then","res","json","data","console","log","catch","render","Activity","month","year","monthNames","activityData","start_time","split","calData","getMonth","getFullYear","getDate","color","end_time","display","Modal","outerStyle","position","top","left","width","height","overflow","zIndex","style","modal","padding","boxSizing","backgroundColor","margin","borderRadius","textAlign","boxShadow","overlay","bottom","right","children","modalStyle","mainStyle","app","button","border"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//var ReactDOM = require('react-dom');\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n\t\t// set initial state\n\t\tthis.state = {\n\t\t\tisModalOpen: false,\n      isInnerModalOpen: false,\n      response: [],\n      users: [],\n      user: [],\n      startDate: new Date(),\n      activity_periods: [],\n      userId: \"\",\n      userName: \"\",\n      isCalenderOpen: false,\n\t\t};\n\t\t// bind functions\n\t\tthis.closeModal = this.closeModal.bind(this);\n\t\tthis.openModal = this.openModal.bind(this);\n  }\n\n   handleChange = date => {\n    this.setState({\n      startDate: date\n    });\n  };\n\n\n\t// close modal (set isModalOpen, true)\n\tcloseModal() {\n\t\tthis.setState({\n\t\t\tisModalOpen: false\n\t\t});\n\t}\n\n\t// open modal (set isModalOpen, false)\n\topenModal(userData) {\n   //alert(userData.activity_periods[0].start_time)\n\t\tthis.setState({\n      isModalOpen: true,\n      user:userData,\n      activity_periods: userData.activity_periods,\n      userId: userData.id,\n      userName: userData.real_name\n    });\n  }\n  \n  componentDidMount() {\n    fetch('http://localhost:9000/api')\n    .then(res => res.json())\n    .then((data) => {\n      console.log(data)\n      // this.setState({ response: data })\n      // this.setState({ users: data.members })\n      // console.log('full response===>')\n      // console.log(this.state.response)\n      // console.log('abstract users data only===>')\n      // console.log(this.state.users)\n    })\n    .catch(console.log)\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        hello\n      {/* <div className=\"col-xs-12\">\n      <h1 style={{textAlign: \"center\", color: \"green\", marginTop: 40}}>All Users</h1>\n      {this.state.users.map((user) => (\n        <div className=\"card\" key={user.id} onClick={() => this.openModal(user)}>\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">Name: {user.real_name}</h5>\n            <h6 className=\"card-subtitle mb-2 text-muted\">Id: {user.id}</h6>\n          </div>\n        </div>\n      ))}\n\n      <Modal\n        isModalOpen={this.state.isModalOpen}\n        closeModal={this.closeModal}\n        style={modalStyle}\n      >\n\n        <button\n          style={{\n            ...mainStyle.button,\n            margin: 0,\n            width: \"auto\",\n            marginTop: 10,\n            float: \"right\"\n          }}\n          onClick={this.closeModal}\n        >\n          Close \n        </button>\n\n        <button\n          style={{\n            ...mainStyle.button,\n            margin: 0,\n            width: \"auto\",\n            marginTop: 10,\n            float: \"left\",\n          }}\n        >\n          Check By Date \n        </button>\n\n      <div style={{marginTop:70, marginBottom: 15}}>\n        <DatePicker\n          selected={this.state.startDate}\n          onChange={this.handleChange}\n        />\n      </div>\n      \n      {this.state.activity_periods.map((activity) => (\n        <Activity  calData={this.state.startDate} activityData={activity} userId={this.state.userId} userName={this.state.userName} />\n      ))}\n        \n      </Modal>\n\n      </div> */}\n     </div>\n    );\n  }\n}\n\n\nclass Activity extends React.Component {\n  constructor(props) {\n\t\tsuper(props);\n      this.state = {\n        month: \"\",\n        date: \"\",\n        year: '',\n        monthNames:[\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n        \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n      }\n    }\n  \n\trender() {\n    this.month=this.props.activityData.start_time.split(\" \")[0]\n    this.date=this.props.activityData.start_time.split(\" \")[1]\n    this.year=this.props.activityData.start_time.split(\" \")[2]\n  \n    if((this.state.monthNames[this.props.calData.getMonth()]===this.month) && (this.props.calData.getFullYear()=== this.year)\n      && (this.props.calData.getDate()=== this.date)\n      ){\n      return (\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">{this.props.userName}\n              <span style={{color: \"green\"}}> Online On </span>\n              <span>{this.props.calData.getDate()} {this.state.monthNames[this.props.calData.getMonth()]} {this.props.calData.getFullYear()}</span>\n            </h5>\n            <h5 className=\"card-title\">From: {this.props.activityData.start_time.split(\" \")[4]}</h5>\n            <h5 className=\"card-title\">To: {this.props.activityData.end_time.split(\" \")[3]}</h5>\n          </div>\n        </div>\n      );\n    } else{\n      return (\n        <div className=\"card\" style={{display: \"none\"}}>\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">{this.props.userName}\n              <span style={{color: \"Red\"}}> Offline </span>\n              <span>\n              {this.props.calData.getDate()} {this.state.monthNames[this.props.calData.getMonth()]} {this.props.calData.getFullYear()}  \n              </span>\n            </h5>\n          </div>\n        </div>\n      );\n    }\n\t}\n}\n\n\n\nclass Modal extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.outerStyle = {\n\t\t\tposition: \"fixed\",\n\t\t\ttop: 0,\n\t\t\tleft: 0,\n\t\t\twidth: \"100%\",\n\t\t\theight: \"100%\",\n\t\t\toverflow: \"auto\",\n\t\t\tzIndex: 1\n\t\t};\n\n\t\t// default style\n\t\tthis.style = {\n\t\t\tmodal: {\n\t\t\t\tposition: \"relative\",\n\t\t\t\twidth: 500,\n\t\t\t\tpadding: 20,\n\t\t\t\tboxSizing: \"border-box\",\n\t\t\t\tbackgroundColor: \"#fff\",\n\t\t\t\tmargin: \"40px auto\",\n\t\t\t\tborderRadius: 3,\n\t\t\t\tzIndex: 2,\n\t\t\t\ttextAlign: \"left\",\n\t\t\t\tboxShadow: \"0 20px 30px rgba(0, 0, 0, 0.2)\",\n\t\t\t\t...this.props.style.modal\n\t\t\t},\n\t\t\toverlay: {\n\t\t\t\tposition: \"fixed\",\n\t\t\t\ttop: 0,\n\t\t\t\tbottom: 0,\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\twidth: \"100%\",\n\t\t\t\theight: \"100%\",\n\t\t\t\tbackgroundColor: \"rgba(0,0,0,0.5)\",\n\t\t\t\t...this.props.style.overlay\n\t\t\t}\n\t\t};\n\t}\n\n\t// render modal\n\trender() {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\t...this.outerStyle,\n\t\t\t\t\tdisplay: this.props.isModalOpen ? \"block\" : \"none\"\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<div style={this.style.overlay} onClick={this.props.closeModal} />\n\t\t\t\t<div onClick={this.props.closeModal} />\n\t\t\t\t<div style={this.style.modal}>{this.props.children}</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// overwrite style\nconst modalStyle = {\n\toverlay: {\n\t\tbackgroundColor: \"rgba(0, 0, 0,0.5)\"\n\t}\n};\n\nconst mainStyle = {\n\tapp: {\n\t\tmargin: \"120px 0\"\n\t},\n\tbutton: {\n\t\tbackgroundColor: \"#408cec\",\n\t\tborder: 0,\n\t\tpadding: \"12px 20px\",\n\t\tcolor: \"#fff\",\n\t\tmargin: \"0 auto\",\n\t\twidth: 150,\n\t\tdisplay: \"block\",\n\t\tborderRadius: 3\n\t}\n};\nexport default App;"]},"metadata":{},"sourceType":"module"}